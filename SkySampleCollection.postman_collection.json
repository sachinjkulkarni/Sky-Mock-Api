{
	"info": {
		"_postman_id": "b1b60a6d-b200-4918-42ad-ef812c7b7e8b",
		"name": "SkySampleCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Sky Mock API List of Articles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {",
							"    \"properties\" : {",
							"        \"id\": {\"type\": \"string\"},",
							"        \"createdAt\": {\"type\": \"string\"},",
							"        \"title\": {\"type\": \"string\"},",
							"        \"sensitive\": {\"type\": \"boolean\"},",
							"        \"topics\": {\"type\": \"object\"},",
							"        \"image\": {\"type\": \"object\"},",
							"        \"priority\": {\"type\": \"number\"}",
							"    }",
							"}",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"pm.test(\"Validate schema for JSON response\",function() {",
							"    pm.response.to.have.jsonSchema(schema)",
							"});",
							"",
							"pm.test(\"No Error being displayed\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(\"Error\");",
							"})",
							"",
							"const firstArticle = response.find(article => article.id === \"1\")",
							"const secondArticle = response.find(article => article.id === \"2\")",
							"const thirdArticle = response.find(article => article.id === \"3\")",
							"const fourthArticle = response.find(article => article.id === \"4656364867443\")",
							"const fifthArticle = response.find(article => article.id === \"5\")",
							"",
							"",
							"pm.test(\"Test the values of first article\" , function() {",
							"    pm.expect(firstArticle.id).to.eql(\"1\");",
							"    pm.expect(firstArticle.createdAt).to.eql(\"2020-10-27T19:10:01.232Z\");",
							"    pm.expect(firstArticle.title).to.eql(\"title 1\");",
							"    pm.expect(firstArticle.sensitive).to.eql(false)",
							"    pm.expect(firstArticle.topics).to.include(\"business\",\"politics\",\"technology\");",
							"    pm.expect(firstArticle.image).to.eql(null);",
							"    pm.expect(firstArticle.priority).to.eql(89);",
							"})",
							"",
							"pm.test(\"Test the values of second article\" , function() {",
							"    pm.expect(secondArticle.id).to.eql(\"2\");",
							"    pm.expect(secondArticle.createdAt).to.eql(\"2020-10-28T07:45:21.526Z\");",
							"    pm.expect(secondArticle.title).to.eql(\"title 2\");",
							"    pm.expect(secondArticle.sensitive).to.eql(true)",
							"    pm.expect(secondArticle.topics).to.empty",
							"    pm.expect(secondArticle.image.url).to.eql(\"https://imgur.com\");",
							"    pm.expect(secondArticle.image.fileType).to.eql(\".jpg\")",
							"    pm.expect(secondArticle.priority).to.eql(45);",
							"})",
							"",
							"pm.test(\"Test the values of third article\" , function() {",
							"    pm.expect(thirdArticle.id).to.eql(\"3\");",
							"    pm.expect(thirdArticle.createdAt).to.eql(\"2020-10-27T13:09:32.347Z\");",
							"    pm.expect(thirdArticle.title).to.eql(\"Â£31 million pounds shortfall in economy\");",
							"    pm.expect(thirdArticle.sensitive).to.eql(false)",
							"    pm.expect(thirdArticle.topics).to.empty",
							"    pm.expect(thirdArticle.image.url).to.eql(\"https://imgur.com\");",
							"    pm.expect(thirdArticle.image.fileType).to.eql(\".svg\")",
							"    pm.expect(thirdArticle.priority).to.eql(25);",
							"})",
							"",
							"pm.test(\"Test the values of fourth article\" , function() {",
							"    pm.expect(fourthArticle.id).to.eql(\"4656364867443\");",
							"    pm.expect(fourthArticle.createdAt).to.eql(\"2020-10-27T17:03:33.158Z\");",
							"    pm.expect(fourthArticle.title).to.eql(\"title 4\");",
							"    pm.expect(fourthArticle.sensitive).to.eql(true)",
							"    pm.expect(fourthArticle.topics).to.include(\"USA\")",
							"    pm.expect(fourthArticle.image).to.empty",
							"    pm.expect(fourthArticle.priority).to.eql(0);",
							"})",
							"",
							"pm.test(\"Test the values of fifth article\" , function() {",
							"    pm.expect(fifthArticle.id).to.eql(\"5\");",
							"    pm.expect(fifthArticle.createdAt).to.eql(\"2020-10-28T02:46:16.766Z\");",
							"    pm.expect(fifthArticle.title).to.eql(\"title 5\");",
							"    pm.expect(fifthArticle.sensitive).to.eql(false)",
							"    pm.expect(fifthArticle.topics).to.empty",
							"    pm.expect(fifthArticle.image).to.empty",
							"    pm.expect(fifthArticle.priority).to.eql(56);",
							"})",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sky Mock API List Single article",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\" : {",
							"        \"id\": {\"type\": \"string\"},",
							"        \"createdAt\": {\"type\": \"string\"},",
							"        \"title\": {\"type\": \"string\"},",
							"        \"sensitive\": {\"type\": \"boolean\"},",
							"        \"image\": {\"type\": \"object\"},",
							"        \"priority\": {\"type\": \"number\"}",
							"    }",
							"}",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"",
							"pm.test(\"Validate schema for JSON response\",function() {",
							"    pm.response.to.have.jsonSchema(schema)",
							"});",
							"",
							"pm.test(\"No Error being displayed\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(\"Error\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status test\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "mockapi",
			"value": "https://5f99522350d84900163b8737.mockapi.io/tech-test"
		}
	]
}